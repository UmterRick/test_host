import requests
import logging
import time
import asyncio
import calendar
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram import executor, Dispatcher, Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Update
from datetime import datetime, timedelta


HEADERS = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:85.0) Gecko/20100101 Firefox/85.0'}
URL = 'https://meandmyschool.org.ua/ru/'
TOKEN = '1485443475:AAEv-Xl15Xp9Z6sSFyH4tizumu4oeJ3ZtdY'
C_URL = 'https://meandmyschool.org.ua/detalnishe-pro-prohramy/'

DB_NAME = 'test1'
ADMIN_PASSWORD = '1111'
TRAINER_PASSWORD = '2222'

USER_TYPE = None
CHAT_ID = 0
msgID = None
DELAY = 100
DELAY_2 = 30

weekdays = ['–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–ë', '–í–°']
eng_weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

daytimes = []
coursesId = []
list_of_coursesID = []

start_text = '–ü—Ä–∏–≤—ñ—Ç! üëã\n–Ø –±–æ—Çü§ñ, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –æ–±—Ä–∞—Ç–∏ —Å–æ–±—ñ –∫—É—Ä—Å —É –Ω–∞—à–æ–º—É –æ—Å–≤—ñ—Ç–Ω—å–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ \n \
        –Ø–Ü–ú–û–Ø–®–ö–û–õ–êüéì\n–û–±—Ä–µ—Ä—ñ—Ç—å —Ö—Ç–æ –≤–∏?üëáüèª'


admin_groups_start = "–í—ñ—Ç–∞—é, —è –ë–æ—Ç <i>–Ø–Ü–ú–û–Ø–®–ö–û–õ–ê</i>\n " \
                     "–í–∏ –¥–æ–¥–∞–ª–∏ –º–µ–Ω–µ –¥–æ —á–∞—Ç—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤.\n" \
                     "–¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏ –¥–æ –≥—Ä—É–ø\n\n" \
                     "–î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π —Ç—Ä–µ–±–∞ <b>–≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å</b> –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤!"


def str_to_list(input_str):
    res = []
    if input_str == '[]':
        res = []
    else:
        for i in input_str[1:-1].split(','):
            i = int(i.strip())
            res.append(i)
    return res


def range_to_str_list(my_range_end):
    res = []
    for el in range(my_range_end):
        res.append(str(el))
    return res


old_topics = {1: 'ex1', 2: 'ex2', 3: 'ex3'}
old_courses = [[1, 1, 'name11'], [1, 2, 'name12'], [2, 1, 'name21'], [3, 1, 'name31']]

old_topics1 = [[1, 'ex1'], [2, 'ex2'], [3, 'ex3']]

new_topics = {1: 'ex1',2: 'ex4',3: 'ex2',4: 'ex3',5: 'ex5'}
new_courses = [[1, 1, 'name11'], [1, 2, 'name12'], [2, 1, 'name21'], [3, 1, 'name31'], [4,1,'name41'], [5,1,'name51']]


#
# for name in table1.names:
#     if name in table2.names:
#         'update table1 set id = (select id from table2 where name2 = name) where nam1= name'
#     elif name not in table2.names:
#         a = 'select course_name from table1 where name1 = name'
#         b = 'select course_name from table12 where name2 = name'
#         if a in b or b in a:
#             'update table1 set name = (select name from table2 where name2 = name) where nam1= name'


